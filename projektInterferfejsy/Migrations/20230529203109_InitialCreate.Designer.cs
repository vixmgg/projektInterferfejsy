// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projektInterferfejsy.Data;

#nullable disable

namespace projektInterferfejsy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230529203109_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projektInterferfejsy.Models.Dieta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Diety");
                });

            modelBuilder.Entity("projektInterferfejsy.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Bialko")
                        .HasColumnType("int");

                    b.Property<int?>("DietaId")
                        .HasColumnType("int");

                    b.Property<int?>("Kalorie")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrzepisId")
                        .HasColumnType("int");

                    b.Property<int?>("Tluszcze")
                        .HasColumnType("int");

                    b.Property<int?>("Weglowodany")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DietaId");

                    b.HasIndex("PrzepisId");

                    b.ToTable("Produkty");
                });

            modelBuilder.Entity("projektInterferfejsy.Models.Przepis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CzasPrzygotowania")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trudnosc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Przepisy");
                });

            modelBuilder.Entity("projektInterferfejsy.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Haslo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("projektInterferfejsy.Models.Dieta", b =>
                {
                    b.HasOne("projektInterferfejsy.Models.User", null)
                        .WithMany("Diety")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("projektInterferfejsy.Models.Produkt", b =>
                {
                    b.HasOne("projektInterferfejsy.Models.Dieta", null)
                        .WithMany("Produkty")
                        .HasForeignKey("DietaId");

                    b.HasOne("projektInterferfejsy.Models.Przepis", null)
                        .WithMany("Produkty")
                        .HasForeignKey("PrzepisId");
                });

            modelBuilder.Entity("projektInterferfejsy.Models.Przepis", b =>
                {
                    b.HasOne("projektInterferfejsy.Models.User", null)
                        .WithMany("Przepisy")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("projektInterferfejsy.Models.Dieta", b =>
                {
                    b.Navigation("Produkty");
                });

            modelBuilder.Entity("projektInterferfejsy.Models.Przepis", b =>
                {
                    b.Navigation("Produkty");
                });

            modelBuilder.Entity("projektInterferfejsy.Models.User", b =>
                {
                    b.Navigation("Diety");

                    b.Navigation("Przepisy");
                });
#pragma warning restore 612, 618
        }
    }
}
